//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientBookstore.ServiceReferenceBookstore {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBookstore")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBookstore")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientBookstore.ServiceReferenceBookstore.BookCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientBookstore.ServiceReferenceBookstore.BookCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookCategory", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceBookstore")]
    public enum BookCategory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WEB = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CHILDREN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ROMANCE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SCIENCE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BIOGRAPHIES = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceBookstore.IServiceBookstore")]
    public interface IServiceBookstore {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetData", ReplyAction="http://tempuri.org/IServiceBookstore/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetData", ReplyAction="http://tempuri.org/IServiceBookstore/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceBookstore/GetDataUsingDataContractResponse")]
        ClientBookstore.ServiceReferenceBookstore.CompositeType GetDataUsingDataContract(ClientBookstore.ServiceReferenceBookstore.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceBookstore/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.CompositeType> GetDataUsingDataContractAsync(ClientBookstore.ServiceReferenceBookstore.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/AddBook", ReplyAction="http://tempuri.org/IServiceBookstore/AddBookResponse")]
        void AddBook(ClientBookstore.ServiceReferenceBookstore.Book newBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/AddBook", ReplyAction="http://tempuri.org/IServiceBookstore/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(ClientBookstore.ServiceReferenceBookstore.Book newBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetBooks", ReplyAction="http://tempuri.org/IServiceBookstore/GetBooksResponse")]
        ClientBookstore.ServiceReferenceBookstore.Book[] GetBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetBooks", ReplyAction="http://tempuri.org/IServiceBookstore/GetBooksResponse")]
        System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.Book[]> GetBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetBooksByCategory", ReplyAction="http://tempuri.org/IServiceBookstore/GetBooksByCategoryResponse")]
        ClientBookstore.ServiceReferenceBookstore.Book[] GetBooksByCategory(ClientBookstore.ServiceReferenceBookstore.BookCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetBooksByCategory", ReplyAction="http://tempuri.org/IServiceBookstore/GetBooksByCategoryResponse")]
        System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.Book[]> GetBooksByCategoryAsync(ClientBookstore.ServiceReferenceBookstore.BookCategory category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetBookByTitle", ReplyAction="http://tempuri.org/IServiceBookstore/GetBookByTitleResponse")]
        ClientBookstore.ServiceReferenceBookstore.Book GetBookByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetBookByTitle", ReplyAction="http://tempuri.org/IServiceBookstore/GetBookByTitleResponse")]
        System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.Book> GetBookByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetBooksByTitle", ReplyAction="http://tempuri.org/IServiceBookstore/GetBooksByTitleResponse")]
        ClientBookstore.ServiceReferenceBookstore.Book[] GetBooksByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/GetBooksByTitle", ReplyAction="http://tempuri.org/IServiceBookstore/GetBooksByTitleResponse")]
        System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.Book[]> GetBooksByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/DeleteBook", ReplyAction="http://tempuri.org/IServiceBookstore/DeleteBookResponse")]
        bool DeleteBook(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBookstore/DeleteBook", ReplyAction="http://tempuri.org/IServiceBookstore/DeleteBookResponse")]
        System.Threading.Tasks.Task<bool> DeleteBookAsync(string title);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBookstoreChannel : ClientBookstore.ServiceReferenceBookstore.IServiceBookstore, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBookstoreClient : System.ServiceModel.ClientBase<ClientBookstore.ServiceReferenceBookstore.IServiceBookstore>, ClientBookstore.ServiceReferenceBookstore.IServiceBookstore {
        
        public ServiceBookstoreClient() {
        }
        
        public ServiceBookstoreClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceBookstoreClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBookstoreClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBookstoreClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ClientBookstore.ServiceReferenceBookstore.CompositeType GetDataUsingDataContract(ClientBookstore.ServiceReferenceBookstore.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.CompositeType> GetDataUsingDataContractAsync(ClientBookstore.ServiceReferenceBookstore.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public void AddBook(ClientBookstore.ServiceReferenceBookstore.Book newBook) {
            base.Channel.AddBook(newBook);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(ClientBookstore.ServiceReferenceBookstore.Book newBook) {
            return base.Channel.AddBookAsync(newBook);
        }
        
        public ClientBookstore.ServiceReferenceBookstore.Book[] GetBooks() {
            return base.Channel.GetBooks();
        }
        
        public System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.Book[]> GetBooksAsync() {
            return base.Channel.GetBooksAsync();
        }
        
        public ClientBookstore.ServiceReferenceBookstore.Book[] GetBooksByCategory(ClientBookstore.ServiceReferenceBookstore.BookCategory category) {
            return base.Channel.GetBooksByCategory(category);
        }
        
        public System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.Book[]> GetBooksByCategoryAsync(ClientBookstore.ServiceReferenceBookstore.BookCategory category) {
            return base.Channel.GetBooksByCategoryAsync(category);
        }
        
        public ClientBookstore.ServiceReferenceBookstore.Book GetBookByTitle(string title) {
            return base.Channel.GetBookByTitle(title);
        }
        
        public System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.Book> GetBookByTitleAsync(string title) {
            return base.Channel.GetBookByTitleAsync(title);
        }
        
        public ClientBookstore.ServiceReferenceBookstore.Book[] GetBooksByTitle(string title) {
            return base.Channel.GetBooksByTitle(title);
        }
        
        public System.Threading.Tasks.Task<ClientBookstore.ServiceReferenceBookstore.Book[]> GetBooksByTitleAsync(string title) {
            return base.Channel.GetBooksByTitleAsync(title);
        }
        
        public bool DeleteBook(string title) {
            return base.Channel.DeleteBook(title);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteBookAsync(string title) {
            return base.Channel.DeleteBookAsync(title);
        }
    }
}
